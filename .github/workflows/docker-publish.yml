name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '18 16 * * *'
  push:
    branches:
      - '**'
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches:
      - '**'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  # IMAGE: ${{ github.repository }}
  IMAGE: ohb
  PROJECT_ID: artuja


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REG_USER }}
          password: ${{ secrets.REG_TOKEN }}
      - name: Build
        run: |-
          docker build \
            --tag "$REGISTRY/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --tag "$REGISTRY/$PROJECT_ID/$IMAGE:${GITHUB_REF##*/}" \
            --tag "$REGISTRY/$PROJECT_ID/$IMAGE:latest" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            --build-arg GITHUB_REF_SHORT="${GITHUB_REF##*/}" \
            ohb 

      # Push the Docker image to Google Container Registry
      - name: Publish Docker image
        run: |-
          for t in $GITHUB_SHA ${GITHUB_REF##*/} latest; do docker push "$REGISTRY/$PROJECT_ID/$IMAGE:${t}"; done

